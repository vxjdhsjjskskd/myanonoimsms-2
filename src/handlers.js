// src/handlers.js - –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞

const {
    getUserData,
    getTelegramIdByAnonLinkCode,
    updateUserData,
} = require('./dataAccess');

const { registerUser, changeAnonymousLink } = require('./user');
const { sendAnonymousMessage, sendAnonymousReply } = require('./anonChat');
const { getTodayDateString, checkAutoBlock, AUTO_BLOCK_DURATION_HOURS } = require('./utils');

const MAX_MESSAGE_LENGTH = 500;

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|undefined} startPayload - Payload –∏–∑ —Å—Å—ã–ª–∫–∏ /start (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–¥ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Å—Å—ã–ª–∫–∏).
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleStart(telegramId, startPayload, botUsername) {
    const telegramIdStr = String(telegramId);
    console.log(`[HANDLER.handleStart] –ü–æ–ª—É—á–µ–Ω–æ /start –æ—Ç ${telegramIdStr}, Payload: ${startPayload || '–Ω–µ—Ç'}`);

    if (startPayload) {
        const ownerTelegramId = await getTelegramIdByAnonLinkCode(startPayload);
        console.log(`[HANDLER.handleStart] ownerTelegramId –¥–ª—è payload ${startPayload}: ${ownerTelegramId}`);

        if (ownerTelegramId && ownerTelegramId !== telegramIdStr) {
            let senderData = await getUserData(telegramIdStr);
            if (!senderData) {
                console.log(`[HANDLER.handleStart] –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ${telegramIdStr} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º.`);
                senderData = await registerUser(telegramIdStr);
                console.log(`[HANDLER.handleStart] –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:`, senderData);
            }
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            senderData.currentCommandStep = 'awaiting_anon_message';
            senderData.tempData = { owner_telegram_id: ownerTelegramId };
            await updateUserData(telegramIdStr, senderData);

            return `üöÄ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É.\n\n` +
                   `‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –µ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ.\n\n` +
                   `–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–∂–Ω–æ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, üí¨ —Ç–µ–∫—Å—Ç, üîä –≥–æ–ª–æ—Å–æ–≤—ã–µ, üì∑ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è (–∫—Ä—É–∂–∫–∏), –∞ —Ç–∞–∫–∂–µ ‚ú® —Å—Ç–∏–∫–µ—Ä—ã`;
        } else if (ownerTelegramId === telegramIdStr) {
            const userData = await getUserData(telegramIdStr);
            console.log(`[HANDLER.handleStart] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramIdStr} –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ. –î–∞–Ω–Ω—ã–µ:`, userData);
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º anonLinkCode –∏–ª–∏ linkCode –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏
            const currentAnonLinkCode = userData.anonLinkCode || userData.linkCode;
            return `–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Å—Å—ã–ª–∫–∞. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ.\n\n` +
                   `–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: \`https://t.me/${botUsername}?start=${currentAnonLinkCode}\``;
        } else {
            console.log(`[HANDLER.handleStart] –°—Å—ã–ª–∫–∞ —Å payload ${startPayload} –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.`);
            return `‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏–ª–∏ –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.`;
        }
    }

    console.log(`[HANDLER.handleStart] –û–±—ã—á–Ω—ã–π /start –æ—Ç ${telegramIdStr}. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º/–ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
    const userData = await registerUser(telegramIdStr);
    console.log(`[HANDLER.handleStart] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–ø–æ–ª—É—á–µ–Ω–∏—è:`, userData);
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º anonLinkCode –∏–ª–∏ linkCode –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏
    const currentAnonLinkCode = userData.anonLinkCode || userData.linkCode;
    const formattedAnonLink = `\`https://t.me/${botUsername}?start=${currentAnonLinkCode}\``;
    console.log(`[HANDLER.handleStart] –§–æ—Ä–º–∏—Ä—É–µ–º–∞—è —Å—Å—ã–ª–∫–∞: ${formattedAnonLink}`);

    return (
        `üöÄ –ù–∞—á–Ω–∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n` +
        `–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:\n` +
        `üëâ ${formattedAnonLink}\n\n` +
        `–†–∞–∑–º–µ—Å—Ç–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É ‚òùÔ∏è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram/TikTok/Instagram, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üí¨`
    );
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /mylink. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleMyLink(telegramId, botUsername) {
    console.log(`[HANDLER.handleMyLink] –ü–æ–ª—É—á–µ–Ω–æ /mylink –æ—Ç ${telegramId}.`);
    const userData = await getUserData(telegramId);
    if (!userData) {
        console.log(`[HANDLER.handleMyLink] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }
    console.log(`[HANDLER.handleMyLink] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è /mylink:`, userData);
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º anonLinkCode –∏–ª–∏ linkCode –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏
    const currentAnonLinkCode = userData.anonLinkCode || userData.linkCode;
    const formattedAnonLink = `\`https://t.me/${botUsername}?start=${currentAnonLinkCode}\``;
    console.log(`[HANDLER.handleMyLink] –§–æ—Ä–º–∏—Ä—É–µ–º–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è /mylink: ${formattedAnonLink}`);
    return `–í–∞—à–∞ –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: ${formattedAnonLink}`;
}

// –§—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
async function handleMyId(telegramId) {
    return "–ö–æ–º–∞–Ω–¥–∞ /myid –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /mylink –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–π –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Å—Å—ã–ª–∫–∏.";
}
async function initiateSendMessage(senderTelegramId) {
    return "–ö–æ–º–∞–Ω–¥–∞ /send –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –≤–∞—à—É –ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É.";
}
async function handleSendMessageStep() {
    return { responseForSender: "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è." };
}
async function handleInbox(telegramId) {
    return "üì¨ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.";
}
async function handleChangeId(telegramId) {
    return "–ö–æ–º–∞–Ω–¥–∞ /changeid –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.";
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /reply. –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
 * @param {string|number} ownerTelegramId - Telegram ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Å—ã–ª–∫–∏ (–æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ).
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞).
 * @returns {Promise<object>} –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
 */
async function handleReply(ownerTelegramId, args) {
    const replyText = args.join(' ');
    if (!replyText) {
        return { responseForOwner: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/reply [–≤–∞—à –æ—Ç–≤–µ—Ç]`" };
    }
    const result = await sendAnonymousReply(ownerTelegramId, replyText);
    return result;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /block. –ë–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ Telegram Chat ID.
 * @param {string|number} blockerTelegramId - Telegram ID –±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (Telegram Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–ª–æ–∫–∏—Ä—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleBlock(blockerTelegramId, args) {
    const blockerData = await getUserData(blockerTelegramId);
    if (!blockerData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    if (args.length === 0) {
        return "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/block [Telegram Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏]`";
    }

    const blockedChatId = args[0];

    if (blockedChatId === String(blockerTelegramId)) {
        return "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.";
    }

    const targetUserData = await getUserData(blockedChatId);
    if (!targetUserData) {
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.";
    }

    if (blockerData.blockedUsers.includes(blockedChatId)) {
        return `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${blockedChatId}** —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`;
    }

    blockerData.blockedUsers.push(blockedChatId);
    await updateUserData(blockerTelegramId, blockerData);
    return `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${blockedChatId}** —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–Ω –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏—è.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /unblock. –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ Telegram Chat ID.
 * @param {string|number} unblockerTelegramId - Telegram ID —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (Telegram Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleUnblock(unblockerTelegramId, args) {
    const unblockerData = await getUserData(unblockerTelegramId);
    if (!unblockerData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    if (args.length === 0) {
        return "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/unblock [Telegram Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏]`";
    }

    const unblockedChatId = args[0];

    if (!unblockerData.blockedUsers.includes(unblockedChatId)) {
        return `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${unblockedChatId}** –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.`;
    }

    unblockerData.blockedUsers = unblockerData.blockedUsers.filter(id => id !== unblockedChatId);
    await updateUserData(unblockerTelegramId, unblockerData);
    return `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${unblockedChatId}** —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /blocked. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ Telegram Chat ID).
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
async function handleBlocked(telegramId) {
    const userData = await getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const blockedList = userData.blockedUsers || [];

    if (blockedList.length === 0) {
        return "‚úÖ –í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.";
    }

    let response = "üö´ **–°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ Chat ID):**\n";
    for (const blockedId of blockedList) {
        response += `- ${blockedId}\n`;
    }
    return response;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /changelink. –ú–µ–Ω—è–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleChangeLink(telegramId, botUsername) {
    const userData = await getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const oldAnonLinkCode = userData.anonLinkCode || userData.linkCode; // –£—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ
    const newAnonLinkCode = await changeAnonymousLink(telegramId);

    const formattedNewAnonLink = `\`https://t.me/${botUsername}?start=${newAnonLinkCode}\``;

    return `‚úÖ –í–∞—à–∞ –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å \`https://t.me/${botUsername}?start=${oldAnonLinkCode}\` –Ω–∞ ${formattedNewAnonLink}.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.
 * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π.
 */
function handleHelp() {
    return (
        "**üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –ê–Ω–æ–Ω–∏–º–Ω–æ–π –ø–æ—á—Ç—ã:**\n\n" +
        "/mylink - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/reply [—Ç–µ–∫—Å—Ç] - –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
        "/block [Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∞–º –ø–∏—Å–∞—Ç—å)\n" +
        "/unblock [Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
        "/blocked - —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n" +
        "/changelink - —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
        "**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**\n" +
        "- –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.\n" +
        "- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞ –º–∞—Ç –∏ —Å–ø–∞–º –Ω–∞ 24 —á–∞—Å–∞."
    );
}

/**
 * –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥.
 * @param {string|number} chatId - ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<object|null>} –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è/–ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–ª–∏ null, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.
 */
async function handleUserTextMessage(chatId, messageText) {
    const userData = await getUserData(chatId);
    if (!userData) {
        return null;
    }

    if (userData.currentCommandStep === 'awaiting_anon_message') {
        const result = await sendAnonymousMessage(chatId, userData.tempData.owner_telegram_id, messageText);
        // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        userData.currentCommandStep = null;
        userData.tempData = {};
        await updateUserData(chatId, userData);
        return result;
    }

    return null;
}

module.exports = {
    handleStart,
    handleMyLink,
    handleMyId,
    initiateSendMessage,
    handleSendMessageStep,
    handleInbox,
    handleReply,
    handleBlock,
    handleUnblock,
    handleBlocked,
    handleChangeId,
    handleChangeLink,
    handleHelp,
    handleUserTextMessage
};
