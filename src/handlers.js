// src/handlers.js - –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–ª—è AnonAskBot)

const {
    getUserData,
    getTelegramIdByAnonymousId,
    getTelegramIdByAnonLinkCode,
    getUsers,
    getMessages,
    getBlocks,
    updateUserData,
    updateBlocksData,
    getAnonIdMap,
    getAnonLinkMap
} = require('./inMemoryDb');

const { registerUser, updateMessageCount, changeAnonymousId, changeAnonymousLink } = require('./user');
const { recordMessage, getRecentMessages } = require('./chat');
const { sendAnonymousMessage, sendAnonymousReply } = require('./anonChat');
const { generateAnonymousId, getTodayDateString, isBlocked, checkAutoBlock, AUTO_BLOCK_DURATION_HOURS } = require('./utils');

// --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö ---
const MAX_MESSAGES_PER_DAY = 20; // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–æ –æ—Å—Ç–∞–≤–∏–º –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
const MAX_MESSAGE_LENGTH = 500;

// --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ ---

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|undefined} startPayload - Payload –∏–∑ —Å—Å—ã–ª–∫–∏ /start (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–¥ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Å—Å—ã–ª–∫–∏).
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ (–¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleStart(telegramId, startPayload, botUsername) {
    const telegramIdStr = String(telegramId);
    console.log(`[HANDLER] /start –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç Telegram ID: ${telegramIdStr}, Payload: ${startPayload}`);

    // –ï—Å–ª–∏ –µ—Å—Ç—å startPayload, —ç—Ç–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ, –∫—Ç–æ-—Ç–æ –ø–µ—Ä–µ—à–µ–ª –ø–æ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Å—Å—ã–ª–∫–µ
    if (startPayload) {
        const ownerTelegramId = getTelegramIdByAnonLinkCode(startPayload);
        if (ownerTelegramId && ownerTelegramId !== telegramIdStr) {
            // –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ
            const senderData = getUserData(telegramIdStr);
            if (!senderData) {
                // –ï—Å–ª–∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –µ–≥–æ
                await registerUser(telegramIdStr);
            }
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            const userData = getUserData(telegramIdStr);
            userData.current_command_step = 'awaiting_anon_message';
            userData.temp_data = { owner_telegram_id: ownerTelegramId };
            updateUserData(telegramIdStr, userData);

            return `–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É —ç—Ç–æ–π —Å—Å—ã–ª–∫–∏. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:`;
        } else if (ownerTelegramId === telegramIdStr) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ
            return `–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Å—Å—ã–ª–∫–∞. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ.\n\n` +
                   `–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: \`https://t.me/${botUsername}?start=${startPayload}\``;
        }
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç payload –∏–ª–∏ payload –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –∏–ª–∏ —ç—Ç–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å—Å—ã–ª–∫–∏
    const userData = await registerUser(telegramIdStr);
    const formattedAnonId = `\`${userData.anonymous_id}\``;
    const formattedAnonLink = `\`https://t.me/${botUsername}?start=${userData.anon_link_code}\``;

    return (
        `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–æ–Ω–∏–º–Ω—É—é –ø–æ—á—Ç—É! –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: ${formattedAnonId}\n\n` +
        `–í–∞—à–∞ –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: ${formattedAnonLink}\n\n` +
        "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –º–æ–≥–ª–∏ –∑–∞–¥–∞—Ç—å –≤–∞–º –∞–Ω–æ–Ω–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n" +
        "**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏):**\n" +
        "/mylink - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/myid - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID\n" +
        "/send - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ—à–∞–≥–æ–≤–æ)\n" +
        "/inbox - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π\n" +
        "/reply [—Ç–µ–∫—Å—Ç] - –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
        "/block [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å\n" +
        "/unblock [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å\n" +
        "/blocked - —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö\n" +
        "/changeid - —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID\n" +
        "/changelink - —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n\n" +
        "**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:** –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞ –º–∞—Ç –∏ —Å–ø–∞–º."
    );
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /mylink. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleMyLink(telegramId, botUsername) {
    const userData = getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }
    const formattedAnonLink = `\`https://t.me/${botUsername}?start=${userData.anon_link_code}\``;
    return `–í–∞—à–∞ –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: ${formattedAnonLink}`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /myid. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleMyId(telegramId) {
    const userData = getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }
    const formattedAnonId = `\`${userData.anonymous_id}\``;
    return `–í–∞—à –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID: ${formattedAnonId}`;
}

/**
 * –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (—à–∞–≥ 1: –∑–∞–ø—Ä–æ—Å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è).
 * @param {string|number} senderTelegramId - Telegram ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é.
 */
async function initiateSendMessage(senderTelegramId) {
    const senderData = getUserData(senderTelegramId);
    if (!senderData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    senderData.current_command_step = 'awaiting_recipient_id';
    senderData.temp_data = {};
    updateUserData(senderTelegramId, senderData);
    return "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è:";
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —à–∞–≥–∞–º –∏–ª–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ.
 * @param {string|number} senderTelegramId - Telegram ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|undefined} directRecipientId - –ü—Ä—è–º–æ–π ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ä–∞–∑—É (–¥–ª—è /send [ID] [—Ç–µ–∫—Å—Ç])
 * @param {string|undefined} directMessageText - –ü—Ä—è–º–æ–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ä–∞–∑—É
 * @returns {Promise<object>} –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏.
 */
async function handleSendMessageStep(senderTelegramId, messageText, directRecipientId = undefined, directMessageText = undefined) {
    const senderData = getUserData(senderTelegramId);
    if (!senderData) {
        return { responseForSender: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏." };
    }

    const senderAnonId = senderData.anonymous_id;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–≤—Ç–æ–±–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    if (senderData.is_auto_blocked) {
        const blockUntil = new Date(senderData.auto_block_until);
        if (new Date() < blockUntil) {
            const remainingTimeMs = blockUntil.getTime() - new Date().getTime();
            const hours = Math.floor(remainingTimeMs / (1000 * 60 * 60));
            const minutes = Math.floor((remainingTimeMs % (1000 * 60 * 60)) / (1000 * 60));
            return { responseForSender: `üö´ –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${hours} —á ${minutes} –º–∏–Ω.` };
        } else {
            senderData.is_auto_blocked = false;
            senderData.auto_block_until = null;
            updateUserData(senderTelegramId, senderData);
        }
    }

    let recipientAnonId;
    let finalMessageText;

    if (directRecipientId && directMessageText) {
        // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /send [ID] [—Ç–µ–∫—Å—Ç] –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ä–∞–∑—É
        recipientAnonId = directRecipientId.toUpperCase();
        finalMessageText = directMessageText;
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø—Ä—è–º–∞—è –∫–æ–º–∞–Ω–¥–∞
        senderData.current_command_step = null;
        senderData.temp_data = {};
        updateUserData(senderTelegramId, senderData);
    } else if (senderData.current_command_step === 'awaiting_recipient_id') {
        recipientAnonId = messageText.toUpperCase();
        senderData.temp_data.recipient_id = recipientAnonId;
        senderData.current_command_step = 'awaiting_message_text';
        updateUserData(senderTelegramId, senderData);
        return { responseForSender: `ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: **${recipientAnonId}**. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:` };
    } else if (senderData.current_command_step === 'awaiting_message_text') {
        recipientAnonId = senderData.temp_data.recipient_id;
        finalMessageText = messageText;
        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        senderData.current_command_step = null;
        senderData.temp_data = {};
        updateUserData(senderTelegramId, senderData);
    } else {
        // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
        return { responseForSender: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help." };
    }

    // --- –û–±—â–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö ---
    if (finalMessageText.length > MAX_MESSAGE_LENGTH) {
        return { responseForSender: `–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º ${MAX_MESSAGE_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.` };
    }

    if (checkAutoBlock(finalMessageText)) {
        senderData.is_auto_blocked = true;
        senderData.auto_block_until = new Date(Date.now() + AUTO_BLOCK_DURATION_HOURS * 60 * 60 * 1000).toISOString();
        updateUserData(senderTelegramId, senderData);
        return {
            responseForSender: `üö´ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ ${AUTO_BLOCK_DURATION_HOURS} —á–∞—Å–æ–≤.\n–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`
        };
    }

    const recipientTelegramId = getTelegramIdByAnonymousId(recipientAnonId);

    if (!recipientTelegramId) {
        return { responseForSender: "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω." };
    }
    if (recipientTelegramId === String(senderTelegramId)) {
        return { responseForSender: "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ." };
    }

    const recipientData = getUserData(recipientTelegramId);
    if (!recipientData) {
        return { responseForSender: "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã." };
    }

    if (isBlocked(recipientAnonId, senderAnonId)) {
        return { responseForSender: "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –≤–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª." };
    }
    if (isBlocked(senderAnonId, recipientAnonId)) {
        return { responseForSender: "‚ùå –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –µ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è." };
    }

    updateMessageCount(senderTelegramId, senderData);
    if (senderData.messages_sent_today > MAX_MESSAGES_PER_DAY) {
        return { responseForSender: `üö´ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –≤ ${MAX_MESSAGES_PER_DAY} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞.` };
    }

    // recordMessage(senderAnonId, recipientAnonId, finalMessageText); // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

    return {
        responseForSender: `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **${recipientAnonId}**.\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: ${senderData.messages_sent_today}/${MAX_MESSAGES_PER_DAY}`,
        recipientTelegramId: recipientTelegramId,
        senderAnonId: senderAnonId,
        messageText: finalMessageText
    };
}


/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /reply. –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
 * @param {string|number} ownerTelegramId - Telegram ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Å—ã–ª–∫–∏ (–æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ).
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞).
 * @returns {Promise<object>} –û–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
 */
async function handleReply(ownerTelegramId, args) {
    const replyText = args.join(' ');
    if (!replyText) {
        return { responseForOwner: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/reply [–≤–∞—à –æ—Ç–≤–µ—Ç]`" };
    }
    const result = await sendAnonymousReply(ownerTelegramId, replyText);
    return result;
}


/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /inbox. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
 */
async function handleInbox(telegramId) {
    const userData = getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const userAnonId = userData.anonymous_id;
    const receivedMessages = getMessages().filter(msg => msg.recipient_anon_id === userAnonId); // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    receivedMessages.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());

    if (receivedMessages.length === 0) {
        return "üì¨ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.";
    }

    let response = "üì¨ **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:**\n\n";
    for (let i = 0; i < Math.min(10, receivedMessages.length); i++) {
        const msg = receivedMessages[i];
        const timestampDt = new Date(msg.timestamp);
        const formattedTime = timestampDt.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
        const formattedDate = timestampDt.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric' });
        response += (
            `**${i + 1}. –û—Ç ${msg.sender_anon_id}** (${formattedTime} ${formattedDate}):\n` +
            `_${msg.message_text}_\n\n`
        );
    }
    return response;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /block. –ë–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} blockerTelegramId - Telegram ID –±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–ª–æ–∫–∏—Ä—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleBlock(blockerTelegramId, args) {
    const blockerData = getUserData(blockerTelegramId);
    const blocks = getBlocks();
    if (!blockerData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    if (args.length === 0) {
        return "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/block [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏]`";
    }

    const blockerAnonId = blockerData.anonymous_id;
    const blockedAnonId = args[0].toUpperCase();

    if (!getTelegramIdByAnonymousId(blockedAnonId)) {
        return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.";
    }
    if (blockedAnonId === blockerAnonId) {
        return "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.";
    }

    if (!blocks[blockerAnonId]) {
        blocks[blockerAnonId] = [];
    }

    if (blocks[blockerAnonId].includes(blockedAnonId)) {
        return `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${blockedAnonId}** —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`;
    }

    blocks[blockerAnonId].push(blockedAnonId);
    updateBlocksData(blockerAnonId, blocks[blockerAnonId]);
    return `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${blockedAnonId}** —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–Ω –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏—è.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /unblock. –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} unblockerTelegramId - Telegram ID —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string[]} args - –ú–∞—Å—Å–∏–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏).
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleUnblock(unblockerTelegramId, args) {
    const unblockerData = getUserData(unblockerTelegramId);
    const blocks = getBlocks();
    if (!unblockerData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    if (args.length === 0) {
        return "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/unblock [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏]`";
    }

    const unblockerAnonId = unblockerData.anonymous_id;
    const unblockedAnonId = args[0].toUpperCase();

    if (!blocks[unblockerAnonId] || !blocks[unblockerAnonId].includes(unblockedAnonId)) {
        return `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${unblockedAnonId}** –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.`;
    }

    blocks[unblockerAnonId] = blocks[unblockerAnonId].filter(id => id !== unblockedAnonId);
    updateBlocksData(unblockerAnonId, blocks[unblockerAnonId]);
    return `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${unblockedAnonId}** —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /blocked. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
async function handleBlocked(telegramId) {
    const userData = getUserData(telegramId);
    const blocks = getBlocks();
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const userAnonId = userData.anonymous_id;
    const blockedList = blocks[userAnonId] || [];

    if (blockedList.length === 0) {
        return "‚úÖ –í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.";
    }

    let response = "üö´ **–°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**\n";
    for (const blockedId of blockedList) {
        response += `- ${blockedId}\n`;
    }
    return response;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /changeid. –ú–µ–Ω—è–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleChangeId(telegramId) {
    const userData = getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const oldAnonId = userData.anonymous_id;
    const newAnonId = await changeAnonymousId(telegramId);

    const formattedNewAnonId = `\`${newAnonId}\``;

    return `‚úÖ –í–∞—à –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω —Å \`${oldAnonId}\` –Ω–∞ ${formattedNewAnonId}.`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /changelink. –ú–µ–Ω—è–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} botUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞.
 * @returns {Promise<string>} –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 */
async function handleChangeLink(telegramId, botUsername) {
    const userData = getUserData(telegramId);
    if (!userData) {
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.";
    }

    const oldAnonLinkCode = userData.anon_link_code;
    const newAnonLinkCode = await changeAnonymousLink(telegramId);

    const formattedNewAnonLink = `\`https://t.me/${botUsername}?start=${newAnonLinkCode}\``;

    return `‚úÖ –í–∞—à–∞ –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å \`https://t.me/${botUsername}?start=${oldAnonLinkCode}\` –Ω–∞ ${formattedNewAnonLink}.`;
}


/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.
 * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π.
 */
function handleHelp() {
    return (
        "**üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –ê–Ω–æ–Ω–∏–º–Ω–æ–π –ø–æ—á—Ç—ã:**\n\n" +
        "/mylink - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/myid - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID\n" +
        "/send - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ—à–∞–≥–æ–≤–æ)\n" +
        "/inbox - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π\n" +
        "/reply [—Ç–µ–∫—Å—Ç] - –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
        "/block [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∞–º –ø–∏—Å–∞—Ç—å)\n" +
        "/unblock [ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
        "/blocked - —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n" +
        "/changeid - —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π ID\n" +
        "/changelink - —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–æ–Ω–∏–º–Ω—É—é —Å—Å—ã–ª–∫—É\n" +
        "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
        "**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**\n" +
        "- –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.\n" +
        "- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞ –º–∞—Ç –∏ —Å–ø–∞–º –Ω–∞ 24 —á–∞—Å–∞."
    );
}

/**
 * –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥.
 * @param {string|number} chatId - ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @returns {Promise<object|null>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ null, –µ—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
 */
async function handleUserTextMessage(chatId, messageText) {
    const userData = getUserData(chatId);
    if (!userData) {
        return null;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—à–∞–≥–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (userData.current_command_step === 'awaiting_recipient_id' || userData.current_command_step === 'awaiting_message_text') {
        return await handleSendMessageStep(chatId, messageText);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (userData.current_command_step === 'awaiting_anon_message') {
        const ownerTelegramId = userData.temp_data.owner_telegram_id;
        // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        userData.current_command_step = null;
        userData.temp_data = {};
        updateUserData(chatId, userData);
        
        const result = await sendAnonymousMessage(chatId, ownerTelegramId, messageText);
        return result;
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    return null;
}

module.exports = {
    handleStart,
    handleMyLink,
    handleMyId,
    initiateSendMessage,
    handleSendMessageStep,
    handleInbox,
    handleReply,
    handleBlock,
    handleUnblock,
    handleBlocked,
    handleChangeId,
    handleChangeLink,
    handleHelp,
    handleUserTextMessage
};
