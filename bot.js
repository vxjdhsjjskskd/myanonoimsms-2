import { Telegraf, Markup } from 'telegraf';
import dotenv from 'dotenv';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB
import { User } from './userModel.js'; 

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const BOT_TOKEN = process.env.BOT_TOKEN;
export const bot = new Telegraf(BOT_TOKEN); // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MongoDB (–±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ) ---
// –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –≤–∞—à–µ–π User –º–æ–¥–µ–ª—å—é
async function getUserData(chatId) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ MongoDB
    // –ü—Ä–∏–º–µ—Ä: return await User.findOne({ chatId: chatId });
    console.log(`[MongoDB] –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
    return null; 
}

async function upsertUserData(chatId, data) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ MongoDB
    // –ü—Ä–∏–º–µ—Ä: await User.findOneAndUpdate({ chatId: chatId }, { $set: data }, { upsert: true, new: true });
    console.log(`[MongoDB] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}:`, data);
}

async function generateUserCode(chatId) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log(`[MongoDB] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
    return "YOUR_GENERATED_CODE"; // –ó–∞–≥–ª—É—à–∫–∞
}

async function getUserIdByCode(code) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ chatId –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É
    console.log(`[MongoDB] –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫–æ–¥—É ${code}`);
    return null; // –ó–∞–≥–ª—É—à–∫–∞
}

async function updateMessageCounts(senderId, receiverId) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö/–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log(`[MongoDB] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π: –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ${senderId}, –ø–æ–ª—É—á–∞—Ç–µ–ª—å ${receiverId}`);
}


// --- –ê–Ω—Ç–∏—Ñ–ª—É–¥ (–±–∞–∑–æ–≤–∞—è –∑–∞–≥–ª—É—à–∫–∞) ---
const cooldowns = new Map();
const COOLDOWN_SECONDS = 3; 

bot.use(async (ctx, next) => {
    const userId = ctx.from.id;
    const now = Date.now();

    // –û–±–Ω–æ–≤–ª—è–µ–º lastInteraction (–ø–æ–∑–∂–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å upsertUserData)
    // await upsertUserData(userId, { lastInteraction: new Date() });

    const lastExecuted = cooldowns.get(userId);
    if (lastExecuted) {
        const timeElapsed = now - lastExecuted;
        const timeLeft = (COOLDOWN_SECONDS * 1000) - timeElapsed;
        if (timeLeft > 0) {
            const secondsLeft = Math.ceil(timeLeft / 1000);
            console.log(`[Anti-flood] User ${userId} is on cooldown for ${secondsLeft}s.`);
            return ctx.reply(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${secondsLeft} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.`);
        }
    }
    cooldowns.set(userId, now);
    return next();
});


// --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply Keyboard) ---
// –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –≤–∞—à–∏ –∫–Ω–æ–ø–∫–∏ –∏–∑ key.js
const mainKeyboard = Markup.keyboard([
    ['/start', '/profile'],
    ['/help']
]).resize();


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
    const chatId = ctx.chat.id;
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å set_user –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ userCode
    await upsertUserData(chatId, { chatId: chatId, receivedMessagesCount: 0, sentMessagesCount: 0 }); // –ü—Ä–∏–º–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const userCode = await generateUserCode(chatId); // –ó–∞–≥–ª—É—à–∫–∞

    const botInfo = await ctx.telegram.getMe();
    const link = `https://t.me/${botInfo.username}?start=${userCode}`;

    await ctx.reply(
        `üöÄ –ù–∞—á–Ω–∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n` +
        `–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:\nüëâ \`${link}\`\n\n` +
        `–†–∞–∑–º–µ—Å—Ç–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É ‚òùÔ∏è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram/TikTok/Instagram, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üí¨`,
        { parse_mode: 'Markdown', ...mainKeyboard }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ /profile (–∞–Ω–∞–ª–æ–≥ /mystats)
bot.command('profile', async (ctx) => {
    const chatId = ctx.chat.id;
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (get_messages, get_code)
    const userData = await getUserData(chatId); // –ó–∞–≥–ª—É—à–∫–∞
    const received = userData ? userData.receivedMessagesCount : 0;
    const sent = userData ? userData.sentMessagesCount : 0;
    const userCode = userData ? userData.userCode : await generateUserCode(chatId); // –ó–∞–≥–ª—É—à–∫–∞

    const botInfo = await ctx.telegram.getMe();
    const link = `https://t.me/${botInfo.username}?start=${userCode}`;

    await ctx.reply(
        `‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n` +
        `*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å:*\n \n` +
        `üë§ Username: @${ctx.from.username || 'N/A'}\n` +
        `‚ÑπÔ∏è Id: ${ctx.from.id}\n\n` +
        `*–°–æ–æ–±—â–µ–Ω–∏—è:*\n` +
        `üì• –ö–æ–ª-–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö: ${received}\n` +
        `üì§ –ö–æ–ª-–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö: ${sent}\n` +
        `                         \n` +
        `üîó –¢–≤–æ—è —Å—Å—ã–ª–∫–∞: \n` +
        `üëâ\`${link}\`\n` +
        `‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ`,
        { parse_mode: 'Markdown', ...mainKeyboard }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.command('help', async (ctx) => {
    await ctx.reply("–ü–æ–º–æ—â—å –±—É–¥–µ—Ç", mainKeyboard);
});

// TODO: –î–æ–±–∞–≤–∏—Ç—å —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (FSM) –∏–∑ tg_bot/handlers.py
// TODO: –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É callback_query –∏–∑ tg_bot/handlers.py
// TODO: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã /mystats, /url, /issue, /lang, –µ—Å–ª–∏ –æ–Ω–∏ –Ω—É–∂–Ω—ã –∏ –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –Ω–µ –ø–æ–ø–∞–ª –Ω–∏ –≤ –æ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É/FSM)
bot.on('text', async (ctx) => {
    // TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è FSM Send.code –∏ –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    await ctx.reply('–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é –∏–ª–∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.', mainKeyboard);
});

            
