import express from 'express';
import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { User } from './userModel.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
import { bot } from './bot.js'; // bot.js –±—É–¥–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç–∞–Ω—Å Telegraf

const app = express();
const port = process.env.PORT || 3000; 

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MongoDB ---
const MONGO_URI = process.env.MONGO_URI;

async function connectDB() {
    if (!MONGO_URI) {
        console.error('‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è MONGO_URI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
        process.exit(1);
    }

    try {
        await mongoose.connect(MONGO_URI);
        console.log('‚úÖ MongoDB: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ.');
        global.mongooseConnection = mongoose.connection;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
        process.exit(1);
    }
}

// --- –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ---

app.get('/', (req, res) => {
    res.send('–ê–Ω–æ–Ω–∏–º–Ω—ã–π Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!');
});

app.get('/health', (req, res) => {
    const dbStatus = global.mongooseConnection && global.mongooseConnection.readyState === 1 ? 'connected' : 'disconnected';
    res.status(200).json({
        status: 'OK',
        service: 'Anonymous Telegram Bot',
        timestamp: new Date().toISOString(),
        uptime: process.uptime(),
        database: {
            status: dbStatus,
        }
    });
});


app.listen(port, async () => {
    console.log(`üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
    console.log(`üè• Health check –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/health`);
    
    await connectDB();

    // --- –ò–ó–ú–ï–ù–ï–ù–û: –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º Long Polling ---
    try {
        console.log('[Bot] –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º Long Polling...');
        // bot.telegram.deleteWebhook() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true/false
        const deleted = await bot.telegram.deleteWebhook();
        if (deleted) {
            console.log('[Bot] –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.');
        } else {
            console.log('[Bot] –í–µ–±—Ö—É–∫ –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω.');
        }
    } catch (error) {
        console.error('[Bot] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞:', error.message);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞, —Ç–∞–∫ –∫–∞–∫ Long Polling –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
    }
    // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    bot.launch()
        .then(() => {
            console.log('‚úÖ Telegraf –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ Long Polling.');
        })
        .catch(err => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Telegraf –±–æ—Ç–∞:', err);
            // –í–∞–∂–Ω–æ: –µ—Å–ª–∏ —ç—Ç–æ 409 Conflict, –±–æ—Ç –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.
            // Render –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å.
        });
});

// Graceful stop
process.once('SIGINT', async () => {
    console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    await bot.stop('SIGINT');
    if (global.mongooseConnection) {
        await global.mongooseConnection.close();
        console.log('üîó MongoDB —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.');
    }
    console.log('üîó –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (SIGINT).');
    process.exit(0);
});
process.once('SIGTERM', async () => {
    console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    await bot.stop('SIGTERM');
    if (global.mongooseConnection) {
        await global.mongooseConnection.close();
        console.log('üîó MongoDB —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.');
    }
    console.log('üîó –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (SIGTERM).');
    process.exit(0);
});
